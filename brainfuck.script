//brainfuck interpreter

//read brainfuck program into memory

16>>v10; //cvar ptr for program data and program counter

g>>c0; //read byte
c0>?12; //if not null

1>?16; //else jump out

c0>>cv10;
1>+v10; //increase pointer

1>?7; //read byte again


v10>>v8; //store end of program

//run program
//brainfuck symbol definitions
\<>>v100;
\>>>v101;
\->>v102;
\+>>v103;
\[>>v104;
\]>>v105;
\.>>v106;
\,>>v107;

16>>v10; //reset program counter

v8>>v20; //brainfuck memory pointer
1>+v20;

0>>v15; //jumping left flag
0>>v16; //jumping right flag
0>>v17; //nested loop counter

cv10>>c0; //read next byte into memory


v16>?47; //right jump
v15>?65; //left jump
1>?81;

//check if character matches [ or ]
c0>>c1;

v105>-c1;
c1>?56; //goto [ check if doesn't match
1>-v17; //decrease loop cnt
v17>?62; //goto end
0>>v16; //destination reached
1>?70; //jump out
// [ check
c0>>c1;
v104>-c1;
c1>?62; //goto end
//incerase loop counter
1>+v17;
1>?184; //goto end of loop

//left jump
//check if character matches [ or ]
c0>>c1;
v104>-c1;
c1>?73; //goto ] check if doesn't match
1>-v17; //decrease loop cnt
v17>?79; //goto end
0>>v15; //destination reached
1>?80; //jump out
// ] check
c0>>c1;
v105>-c1;
c1>?79; //goto end
//incerase loop counter
1>+v17;
2>-v10; //go back 1 byte in program (end of loop increases it)
1>?184; //goto end of loop

//check if current character matches '<' and if not try that for all other characters
c0>>c1;

v100>-c1;

c1>?94; //doesn't match, try next character

//<
1>-v20;
//goto end of loop
1>?184;


c0>>c1;

v101>-c1;

c1>?106; //doesn't match, try next character

//>
1>+v20;
//goto end of loop
1>?184;


c0>>c1;

v102>-c1;

c1>?118; //doesn't match, try next character

//-
1>-cv20;
//goto end of loop
1>?184;


c0>>c1;

v103>-c1;

c1>?130; //doesn't match, try next character

//>+
1>+cv20;
//goto end of loop
1>?184;


c0>>c1;

v104>-c1;

c1>?144; //doesn't match, try next character

//[
cv20>?141;
1>>v16; //set jump flag to 1

//goto end of loop
1>?184;


c0>>c1;

v105>-c1;

c1>?159; //doesn't match, try next character

//]
cv20>?154;
1>?156;
1>>v15; //set left jump flag

//goto end of loop
1>?184;


c0>>c1;

v106>-c1;

c1>?171; //doesn't match, try next character

//.
cv20>>r;
//goto end of loop
1>?184;


c0>>c1;

v107>-c1;

c1>?184; //doesn't match, continue loop and try next program byte

//,
g>>cv20;
//goto end of loop
1>?184;


// 184 END OF LOOP


1>+v10; //increase program counter

//exit if we reached end of program
v10>>v0;
v8>-v0;
v0>?10000;

//continue loop
1>?39;
