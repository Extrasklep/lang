//brainfuck interpreter

//read brainfuck program into memory

16>>v10; //cvar ptr for program data and program counter

g>>c0; //read byte
c0>?12; //if not null

1>?16; //else jump out

c0>>cv10;
1>+v10; //increase pointer

1>?7; //read byte again


v10>>v8; //store end of program

//run program
//brainfuck symbol definitions
\<>>v100;
\>>>v101;
\->>v102;
\+>>v103;
\[>>v104;
\]>>v105;
\.>>v106;
\,>>v107;

16>>v10; //reset program counter

v8>>v20; //brainfuck memory pointer
1>+v20;

0>>v15; //location of previous [
0>>v16; //jumping right now flag


cv10>>c0; //read next byte into memory


v16>?45;
1>?52;
//check if character matches ] if jumping right now
c0>>c1;

v105>-c1;
c1>?156; //goto end of loop if it doesn't match
0>>v16; //set jump flag back to 0



//check if current character matches '<' and if not try that for all other characters
c0>>c1;

v100>-c1;

c1>?66; //doesn't match, try next character

//<
1>-v20;
//goto end of loop
1>?156;


c0>>c1;

v101>-c1;

c1>?78; //doesn't match, try next character

//>
1>+v20;
//goto end of loop
1>?156;


c0>>c1;

v102>-c1;

c1>?90; //doesn't match, try next character

//-
1>-cv20;
//goto end of loop
1>?156;


c0>>c1;

v103>-c1;

c1>?102; //doesn't match, try next character

//>+
1>+cv20;
//goto end of loop
1>?156;


c0>>c1;

v104>-c1;

c1>?117; //doesn't match, try next character

//[
cv20>?113;
1>>v16; //set jump flag to 1
1>?114;
v10>>v15; //set previous [ location to current pc
//goto end of loop
1>?156;


c0>>c1;

v105>-c1;

c1>?131; //doesn't match, try next character

//]
cv20>?127;
1>?128;
v15>>v10; //go back to previous [
//goto end of loop
1>?156;


c0>>c1;

v106>-c1;

c1>?143; //doesn't match, try next character

//.
cv20>>r;
//goto end of loop
1>?156;


c0>>c1;

v107>-c1;

c1>?156; //doesn't match, continue loop and try next program byte

//,
g>>cv20;
//goto end of loop
1>?156;


//END OF LOOP


1>+v10; //increase program counter

//exit if we reached end of program
v10>>v0;
v8>-v0;
v0>?10000;

//continue loop
1>?38;
